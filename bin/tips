#!/bin/bash

source "$(dirname "$0")/../lib/config.sh"
source "$(dirname "$0")/../lib/helpers.sh"
source "$(dirname "$0")/../lib/prints.sh"
source "$(dirname "$0")/../lib/db_interface.sh"

# Основная логика
main() {
    init_db
    
    local command=""
    local comment=""
    local tags=""

    local search_query=""
    local filter_all_tags=""
    local filter_any_tags=""

    local remove_tags_id=""
    local remove_tags=""

    local edit_id=""
    local edit_id=""
    local edit_id=""
    
    local delete_id=""
    local insert_id=""
    local copy_id=""
    local info_id=""

    # Разбор аргументов
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -l|--list)
                list_tips
                exit 0
                ;;
            
            --clear)
                clear_tips
                exit 0
                ;;
            
            -v|--version)
                print_version
                exit 0
                ;;
            
            -h|--help)
                print_help
                exit 0
                ;;
            
            --count)
                print_count
                exit 0
                ;;
            
            -a|--add)
                if [[ $# -lt 2 || "$2" == -* || -n "$3" ]]; then
                    die "после -a, --add требуется аргумент (команда)"
                fi
                command="$2"
                
                if [[ $# -ge 3 && "$3" != -* && -n "$3" ]]; then
                    comment="$3"
                    shift 3
                else
                    shift 2
                fi
                ;;
            
            -y|--last-cmd)
                command="$(get_last_cmd)"

                if [[ $# -ge 2 && "$2" != -* && -n "$2" ]]; then
                    comment="$2"
                    shift 2
                else
                    shift 1
                fi
                ;;
            
            -t|--tags)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -t, --tags требуется аргумент (теги)"
                fi
                tags="$2"
                shift 2
                ;;
            
            -s|--search)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -s, --search требуется аргумент (запрос)"
                fi
                search_query="$2"
                shift 2
                ;;

            --all-tags)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после --all-tags требуется аргумент (теги)"
                fi
                filter_all_tags="$2"
                shift 2
                ;;
            
            --any-tags)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после --any-tags требуется аргумент (теги)"
                fi
                filter_any_tags="$2"
                shift 2
                ;;
            
            --remove-tags)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после --remove-tags требуется аргумент (номер)"
                fi
                remove_tags_id="$2"
                
                if [[ $# -ge 3 && "$3" != -* && -n "$3" ]]; then
                    remove_tags="$3"
                    shift 3
                else
                    shift 2
                fi
                ;;

            -e|--edit)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -e, --edit требуется аргумент (номер)"
                fi
                edit_id="$2"
                if [[ $# -lt 3 || "$3" == -* || -n "$3" ]]; then
                    die "после -e, --edit требуется аргумент (cmd cmt tags)"
                fi
                edit_id="$2"
                if [[ $# -lt 4 || "$4" == -* || -n "$4" ]]; then
                    die "после -e, --edit требуется аргумент (новое значение)"
                fi
                edit_id="$2"
                shift 2
                ;;
            
            -d|--delete)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -d, --delete требуется аргумент (номер)"
                fi
                delete_id="$2"
                shift 2
                ;;
            
            -i|--insert)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -i, --insert требуется аргумент (номер)"
                fi
                insert_id="$2"
                shift 2
                ;;
            
            -c|--copy)
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после -c, --copy требуется аргумент (номер)"
                fi
                copy_id="$2"
                shift 2
                ;;
            
            --info)
                info_id="$2"
                if [[ $# -lt 2 || "$2" == -* || -n "$2" ]]; then
                    die "после --info требуется аргумент (номер)"
                fi
                shift 2
                ;;
            
            *)
                print_msg r "Неизвестный аргумент: $1"
                print_msg r "Используйте tips --help для просмотра справки"
                exit 1
                ;;
        esac
    done
    
    # Обработка действий
    if [[ -n "$command" ]]; then
        add_tip "$command" "$comment" "$tags"
        exit 0
    fi

    if [[ -n "$search_query" ]] || [[ -n "$filter_all_tags" ]] || [[ -n "$filter_any_tags" ]]; then
        search_tips "$search_query" "$filter_all_tags" "$filter_any_tags"
        exit 0
    fi

    if [[ -n "$remove_tags_id" ]]; then
        remove_tags "$remove_tags_id" "$remove_tags"
        exit 0
    fi

    if [[ -n "$insert_id" ]]; then
        insert_tip "$insert_id"
        exit 0
    fi

    if [[ -n "$copy_id" ]]; then
        copy_tip "$copy_id"
        exit 0
    fi
    
    if [[ -n "$delete_id" ]]; then
        delete_tip "$delete_id"
        exit 0
    fi
    
    if [[ -n "$info_id" ]]; then
        info_tip "$info_id"
        exit 0
    fi
}

main "$@"